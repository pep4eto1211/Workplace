<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:converter="using:Syncfusion.UI.Xaml.Converters"
	xmlns:local="using:Syncfusion.UI.Xaml.Controls" xmlns:Input="using:Syncfusion.UI.Xaml.Controls.Input" xmlns:sys="using:System"
	xmlns:shared="using:Syncfusion.UI.Xaml.Primitives" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

	<Thickness x:Key="SyncfusionUpDownBorderThemeThickness">1</Thickness>

	<SolidColorBrush x:Key="SyncfusionTextBoxExtErrorThemeBrush" Color="Red" />

	<SolidColorBrush x:Key="AccentBrush" Color="#FF1FAEFF" />

	<SolidColorBrush x:Key="SyncfusionRatingItemPointerOverThemeBrush" Color="#FF8152EF"/>

	<Thickness x:Key="SyncfusionTransitionContentCotnrolThemePadding">5 0 0 0</Thickness>

	<converter:TimeFormater x:Key="timeFormater"/>

	<converter:DateTimeFormater x:Key="Formater"/>

	<converter:InvertBooleanConverter x:Key="BooleanConverter"/>

	<converter:OrientationToAngleConverter x:Key="AngleConverter"/>

	<converter:PrecisionToVisibilityConverter x:Key="VisibilityConverter"/>

	<converter:PrecisionToVisibilityInverseConverter x:Key="InverseConverter"/>

	<converter:Inverter x:Key="Inverter"/>

	<converter:ToolTipVisibilityConverter x:Key="ToolTipConverter"/>

	<converter:BooleanToVisibilityConverter x:Key="BooleanVisibilityConverter"/>

	<converter:InverseBooleanToVisibilityConverter x:Key="InverseBooleanVisibilityConverter" />

	<converter:BrushToColorConverter x:Key="BrushConverter"/>

	<converter:CalendarHeaderFormatter x:Key="HeaderFormatter"/>

	<converter:EmptyStringToVisibilityConverter x:Key="EmptyStringVisibilityConverter" />

	<Style x:Key="DownButtonStyle" TargetType="RepeatButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="1" 
								BorderBrush="{TemplateBinding Background}">
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Path x:Name="path" Data="M0,0L53.333,0 53.333,8.888 0,8.888z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
							</ContentPresenter>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="DateSelectorButton">
		<Setter Property="Foreground" Value="#000000"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="FontFamily" Value="Segoe UI Symbol"/>
		<Setter Property="FontWeight" Value="Normal"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="AutomationProperties.ItemType" Value="App Bar Button"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ButtonBase">
					<Grid x:Name="RootGrid" Width="50" Height="50" Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ApplicationViewStates">
								<VisualState x:Name="FullScreenLandscape"/>
								<VisualState x:Name="Filled"/>
								<VisualState x:Name="FullScreenPortrait">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Snapped">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="RootGrid" Storyboard.TargetProperty="Width">
											<DiscreteObjectKeyFrame KeyTime="0" Value="60"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="LightGray"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ColorAnimation
												Storyboard.TargetName="BackgroundGlyph"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#000000"
												Duration="0"/>
										<ColorAnimation
												Storyboard.TargetName="Content"
												Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
												To="#FFFFFF"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualWhite"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
										<DoubleAnimation
												Storyboard.TargetName="FocusVisualBlack"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="PointerFocused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0" Storyboard.TargetName="OutlineGlyph" Storyboard.TargetProperty="Opacity"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGlyph" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="BackgroundCheckedGlyph" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarItemPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<StackPanel VerticalAlignment="Center"  >
							<Grid Width="34" Height="34" Margin="8,8,5,5"  HorizontalAlignment="Center">
								<TextBlock x:Name="BackgroundGlyph" Text="&#xE0A8;" FontFamily="Segoe UI Symbol" FontSize="45" Margin="-4,-19,0,0" Foreground="{StaticResource AppBarItemBackgroundThemeBrush}"/>
								<TextBlock x:Name="OutlineGlyph" Text="&#xE0A7;" FontFamily="Segoe UI Symbol" FontSize="45" Margin="-4,-19,0,0"/>
								<ContentPresenter x:Name="Content" HorizontalAlignment="Center" Margin="-2,-4,0,0" VerticalAlignment="Center"/>
							</Grid>
						</StackPanel>
						<Ellipse x:Name="FocusVisualWhite" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Ellipse x:Name="FocusVisualBlack" Height="42" Width="42"  IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Content" Value="1"/>
	</Style>


	<Style TargetType="Input:SfRating">
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfRating">
					<Grid RenderTransformOrigin="0.5, 0.5">
						<Grid HorizontalAlignment="Left" x:Name="PART_ToolTip" >
							<Popup x:Name="PART_Popup" VerticalOffset="-65">
								<Border BorderBrush="{StaticResource ToolTipBorderThemeBrush}" 
									HorizontalAlignment="Center" VerticalAlignment="Center"
									BorderThickness="2" 
									Height="37"
									Background="{StaticResource ToolTipBackgroundThemeBrush}" 
									Padding="10 0">

									<ContentPresenter x:Name="PART_Border"  Content="{Binding PreviewValue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												   FontSize="15" FontWeight="Bold"
												   Foreground="{StaticResource ToolTipForegroundThemeBrush}" 
													  VerticalAlignment="Center" HorizontalAlignment="Center"/>
								</Border>
							</Popup>
						</Grid>
						<Border BorderBrush="{TemplateBinding BorderBrush}" Grid.Row="1" CornerRadius="{TemplateBinding CornerRadius}" x:Name="PART_Host"
								Margin="0 0 0 22"
								BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
							<ItemsPresenter  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" 
											 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfRatingItem">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="UnratedFill" Value="#FFE6E6E6" />
		<Setter Property="PointerOverFill" Value="#FFADADAD" />
		<Setter Property="Width" Value="30"/>
		<Setter Property="RatedFill" Value="{StaticResource AccentBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfRatingItem">
					<Grid Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="MouseOverPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="Unrated"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="RatedPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Rated">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="RatedPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetName="Unrated"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
										<DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetName="MouseOverPath"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>

						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="PART_RatingGrid"  Margin="{TemplateBinding Padding}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>

							<Path x:Name="Unrated" Fill="{TemplateBinding UnratedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding UnratedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding UnratedStrokeThickness}" VerticalAlignment="Stretch" Opacity="1" 
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>

							<Path x:Name="MouseOverPath" Fill="{TemplateBinding PointerOverFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding PointerOverStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding PointerOverStrokeThickness}" VerticalAlignment="Stretch" Opacity="0" Visibility="{Binding InternalPrecision, Converter={StaticResource VisibilityConverter}, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>


							<Path x:Name="RatedPath" Fill="{TemplateBinding RatedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding RatedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding RatedStrokeThickness}" VerticalAlignment="Stretch" Opacity="0"
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>

							<shared:LinearClipper ExpandDirection="Right" RatioVisible="{TemplateBinding InternalValue}">
								<Path x:Name="LinearCliperPath" Fill="{TemplateBinding RatedFill}" Stretch="Uniform" 
							  Stroke="{TemplateBinding RatedStroke}" StrokeLineJoin="Round" 
							  StrokeThickness="{TemplateBinding RatedStrokeThickness}" VerticalAlignment="Stretch" 
							  Data="M1540.22,2082.07L1546.95,2102.78 1568.73,2102.78 1551.11,2115.58 1557.84,2136.29 1540.22,2123.49 1522.6,2136.29 1529.33,2115.58 1511.71,2102.78 1533.49,2102.78 1540.22,2082.07z"/>
							</shared:LinearClipper>

							<Border Grid.Row="1" Margin="{TemplateBinding Margin}">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:LoopingSelectorItem" x:Key="LoopingSelectorItemStyle">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border x:Name="root" Opacity="0" Background="Transparent" Padding="{TemplateBinding Padding}">

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">

								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.2"/>
								</VisualStateGroup.Transitions>

								<VisualState x:Name="Normal"/>

								<VisualState x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="Black" Duration="0"/>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="root" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<DoubleAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" To="White" Duration="0"/>
										<ColorAnimation Storyboard.TargetName="background" Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" To="{Binding AccentBrush, Converter={StaticResource BrushConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" Duration="0"/>
									</Storyboard>
								</VisualState>

							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border.RenderTransform>
							<TranslateTransform x:Name="Transform"/>
						</Border.RenderTransform>

						<Grid>
							<Rectangle x:Name="background" Opacity="0" Fill="Transparent"/>

							<Border BorderThickness="2" BorderBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								<ContentPresenter Margin="1 0" x:Name="contentPresenter"/>
							</Border>
						</Grid>

					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="local:LoopingSelector" x:Key="LoopingSelectorStyle">
		<Setter Property="ItemHeight" Value="80"/>
		<Setter Property="ItemWidth" Value="80"/>
		<Setter Property="Width" Value="80" />
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="ManipulationMode" Value="All"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource LoopingSelectorItemStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{TemplateBinding Background}">
						<Canvas x:Name="ItemsPanel">
							<Canvas.RenderTransform>
								<TransformGroup>
									<TranslateTransform x:Name="CenteringTransform"/>
									<TranslateTransform x:Name="PanningTransform"/>
								</TransformGroup>
							</Canvas.RenderTransform>
						</Canvas>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="local:TransitionContentControl" x:Key="HeaderStyle">
		<Setter Property="Height" Value="50"/>
		<Setter Property="Margin" Value="10 0 0 0"/>
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Foreground" Value="#000000" />
		<Setter Property="FontSize" Value="22"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Transition">
			<Setter.Value>
				<local:FadeTransition />
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DropDownButtonStyle" TargetType="RepeatButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border"  Background="{TemplateBinding Background}">

							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
											  ContentTransitions="{TemplateBinding ContentTransitions}"                                              
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Width="32"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Path x:Name="path" Data="F1M181.297,177.841L181.205,177.746 181.385,177.563 202.804,156.146 202.804,135.07 178.497,159.373 170.847,167.026 170.666,167.205 163.107,159.653 138.804,135.345 138.804,156.42 160.219,177.841 170.76,188.379 181.297,177.841z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
							</ContentPresenter>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="DefaultMonthCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding MonthNumber}"/>
			<TextBlock FontSize="12" FontWeight="Light" Text="{Binding MonthName}"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="DefaultDayCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock  FontSize="28" Margin="0 0 0 -3" Text="{Binding DayNumber}"/>
			<TextBlock FontSize="12" FontWeight="Light" Text="{Binding DayName}"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="DefaultYearCellTemplate">
		<TextBlock FontSize="28" HorizontalAlignment="Left" Margin="2 0 0 13" Text="{Binding YearNumber}" VerticalAlignment="Bottom"/>
	</DataTemplate>


	<Style TargetType="Input:SfDateSelector">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="#FFFFFF"/>
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="DayCellTemplate" Value="{StaticResource DefaultDayCellTemplate}"/>
		<Setter Property="HeaderStyle" Value="{StaticResource HeaderStyle}"/>
		<Setter Property="Header" Value="Choose Date"/>
		<Setter Property="Height" Value="500"/>
		<Setter Property="MonthCellTemplate" Value="{StaticResource DefaultMonthCellTemplate}"/>
		<Setter Property="ShowDoneButton" Value="True"/>
		<Setter Property="ShowCancelButton" Value="True"/>
		<Setter Property="SelectorStyle" Value="{StaticResource LoopingSelectorStyle}"/>
		<Setter Property="YearCellTemplate" Value="{StaticResource DefaultYearCellTemplate}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfDateSelector">
					<Border  BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">
						<Grid Background="{TemplateBinding Background}" x:Name="PART_Root" 
							  Width="{Binding Width, RelativeSource={RelativeSource Mode=TemplatedParent}}"
							  Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid VerticalAlignment="Top" Grid.Row="0">
								<local:TransitionContentControl Style="{TemplateBinding HeaderStyle}" IsTabStop="False"
											Content="{Binding Header,RelativeSource={RelativeSource Mode=TemplatedParent}}"
											ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
											/>
							</Grid>
							<Grid HorizontalAlignment="Center" x:Name="LoopingSelectorGrid" Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<local:LoopingSelector x:Name="PART_Month" IsTabStop="False"
														ItemTemplate="{Binding MonthCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MonthCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
								<local:LoopingSelector Grid.Column="1" x:Name="PART_Date" IsTabStop="False"
														ItemTemplate="{Binding DayCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding DayCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
								<local:LoopingSelector Grid.Column="2" x:Name="PART_Year" IsTabStop="False" 
														ItemTemplate="{Binding YearCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding YearCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"  
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
							</Grid>

							<Grid  HorizontalAlignment="Center" Grid.Row="2" Margin="2 2 6 5">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button  Style="{StaticResource DateSelectorButton}" IsTabStop="False" x:Name="PART_DoneButton" Margin="0 0 0 0 " Padding="20 3 20 3" Content="&#xE10B;" Grid.Column="0" HorizontalAlignment="Stretch"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
								<Button Style="{StaticResource DateSelectorButton}" IsTabStop="False" x:Name="PART_CancelButton" Margin="0 0 0 0" Padding="20 3 20 3"  Content="&#xE10A;" Grid.Column="1" HorizontalAlignment="Stretch" 
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="PickerTextBoxExtStyle" TargetType="Input:SfTextBoxExt">
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfTextBoxExt">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="PART_Border"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"/>
						<TextBlock Text="{TemplateBinding Text}" Margin="{TemplateBinding BorderThickness}" x:Name="Element"
								   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
								   Foreground="{TemplateBinding Foreground}"
								   Height="{TemplateBinding Height}"
								   Width="{TemplateBinding Width}"
								   Padding="{TemplateBinding Padding}"/>
						<ContentControl IsTabStop="False"
										Visibility="{Binding Text,Converter={StaticResource EmptyStringVisibilityConverter},RelativeSource={RelativeSource TemplatedParent}}"
										Content="{TemplateBinding Watermark}" 
										ContentTemplate="{TemplateBinding WatermarkTemplate}" 
										ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" 
										Margin="{TemplateBinding BorderThickness}" 
										Padding="{TemplateBinding Padding}"/>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="Input:SfDatePicker">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="DropDownHeight" Value="400"/>
		<Setter Property="FormatString" Value="d" />
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Width" Value="244"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfDatePicker">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBlock">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border  >
							<Grid >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Input:SfTextBoxExt AllowPointerEvents="True"  
												  x:Name="PART_TextBlock" 
												  IsReadOnly="True"
												  Style="{StaticResource PickerTextBoxExtStyle}" 
												  Text="{Binding Value,Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Background="{TemplateBinding Background}" 
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource InverseBooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Grid.Column="0"
												  Watermark="{TemplateBinding Watermark}"
												  WatermarkTemplate="{TemplateBinding WatermarkTemplate}"
												  />

								<Input:SfTextBoxExt Grid.Column="0"  Text="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  x:Name="PART_TextBoxExt" 
												  IsReadOnly="true" 
												  AllowPointerEvents="True" 
												  Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>
								<Rectangle Width="2" Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="1" />
								<RepeatButton x:Name="PART_DropDownButton" 
											  Style="{StaticResource DropDownButtonStyle}"  
											  IsTabStop="{Binding AllowInlineEditing,RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Background="{StaticResource AccentBrush}"   
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="2" />
							</Grid>
						</Border>

						<Popup x:Name="PART_DropDown"
							   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<Grid x:Name="PART_DatePickerPage" Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
								<Input:SfDateSelector BorderThickness="{TemplateBinding BorderThickness}"
								Style="{Binding SelectorStyle,RelativeSource={RelativeSource Mode=TemplatedParent}}"
										BorderBrush="#000000"
										Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										x:Name="PART_DateSelector" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										SelectedDateTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="DefaultHourCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding HourNumber}"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="DefaultMinuteCellTemplate">
		<StackPanel HorizontalAlignment="Left" Margin="2" VerticalAlignment="Bottom">
			<TextBlock FontWeight="Light" FontSize="28" Margin="0 0 0 -3" Text="{Binding MinuteNumber}"/>
		</StackPanel>
	</DataTemplate>

	<DataTemplate x:Key="DefaultMeridiemCellTemplate">
		<TextBlock FontWeight="Light" FontSize="28" HorizontalAlignment="Center" Text="{Binding AmPmString}" VerticalAlignment="Bottom"/>
	</DataTemplate>

	<Style TargetType="Input:SfTimeSelector">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="#FFFFFF"/>
		<Setter Property="BorderBrush" Value="#000000" />
		<Setter Property="BorderThickness" Value="2" />
		<Setter Property="Header" Value="Choose Time"/>
		<Setter Property="Height" Value="400"/>
		<Setter Property="HeaderStyle" Value="{StaticResource HeaderStyle}"/>
		<Setter Property="HourCellTemplate" Value="{StaticResource DefaultHourCellTemplate}"/>
		<Setter Property="IsTabStop" Value="True" />
		<Setter Property="MeridiemCellTemplate" Value="{StaticResource DefaultMeridiemCellTemplate}"/>
		<Setter Property="MinuteCellTemplate" Value="{StaticResource DefaultMinuteCellTemplate}"/>
		<Setter Property="ShowDoneButton" Value="True"/>
		<Setter Property="ShowCancelButton" Value="True"/>
		<Setter Property="SelectorStyle" Value="{StaticResource LoopingSelectorStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfTimeSelector">
					<Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}">

						<Grid Background="{TemplateBinding Background}" x:Name="PART_Root">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid VerticalAlignment="Top" Grid.Row="0">
								<local:TransitionContentControl Style="{Binding HeaderStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
											Content="{Binding Header,RelativeSource={RelativeSource Mode=TemplatedParent}}"
											ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
							</Grid>
							<Grid HorizontalAlignment="Center" Grid.Row="1">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<local:LoopingSelector x:Name="PART_Hour" IsTabStop="False"
														ItemTemplate="{Binding HourCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding HourCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
								<local:LoopingSelector Grid.Column="1" x:Name="PART_Minute" IsTabStop="False"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														ItemTemplate="{Binding MinuteCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MinuteCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
								<local:LoopingSelector Grid.Column="2" x:Name="PART_Meridiem" IsTabStop="False"
														Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"   
														ItemTemplate="{Binding MeridiemCellTemplate,RelativeSource={RelativeSource Mode=TemplatedParent}}"
													   ItemTemplateSelector="{Binding MeridiemCellTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
														Height="{Binding Height, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														HorizontalAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								</local:LoopingSelector>
							</Grid>

							<Grid HorizontalAlignment="Center" Grid.Row="2" Margin="2 0 2 6">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<Button Style="{StaticResource DateSelectorButton}" IsTabStop="False" x:Name="PART_SelectButton" Content="&#xE10B;"  HorizontalAlignment="Center" Grid.Row="0" Padding="20 3"
									Visibility="{Binding ShowDoneButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
								<Button Style="{StaticResource DateSelectorButton}" IsTabStop="False" x:Name="PART_CancelButton"  Content="&#xE10A;"  Grid.Column="1" HorizontalAlignment="Center" Padding="20 3"
									Visibility="{Binding ShowCancelButton, Converter={StaticResource BooleanVisibilityConverter}, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Grid>
						</Grid>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfTimePicker">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="DropDownHeight" Value="400"/>
		<Setter Property="FormatString" Value="hh:mm tt"/>
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Width" Value="244" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_TextBoxExt">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border>
							<Grid >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<Input:SfTextBoxExt AllowPointerEvents="True"  
												  x:Name="PART_TextBlock" 
												  IsReadOnly="True"
												  Style="{StaticResource PickerTextBoxExtStyle}" 
												  Text="{Binding Value,Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Background="{TemplateBinding Background}" 
												  BorderBrush="{TemplateBinding BorderBrush}"
												  BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource InverseBooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Grid.Column="0"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>

								<Input:SfTextBoxExt Grid.Column="0"  Text="{Binding Value, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  x:Name="PART_TextBoxExt" 
												  IsReadOnly="true" 
												  AllowPointerEvents="True" 
												  Background="{TemplateBinding Background}"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
												  Visibility="{Binding AllowInlineEditing,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
												  Watermark="{Binding Watermark,RelativeSource={RelativeSource TemplatedParent}}" 
												  WatermarkTemplate="{Binding WatermarkTemplate,RelativeSource={RelativeSource  TemplatedParent}}"/>
								<Rectangle Width="2" Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}" Grid.Column="1" />
								<RepeatButton x:Name="PART_DropDownButton" 
											  Style="{StaticResource DropDownButtonStyle}"  
											  IsTabStop="{Binding AllowInlineEditing,RelativeSource={RelativeSource TemplatedParent}}"
											  Visibility="{Binding ShowDropDownButton,Converter={StaticResource BooleanVisibilityConverter},RelativeSource={RelativeSource Mode=TemplatedParent}}"
											  Background="{StaticResource AccentBrush}"   
											  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Grid.Column="2" />
							</Grid>
						</Border>
						<Popup x:Name="PART_DropDown"
							   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<Grid x:Name="PART_TimePickerPage" Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}" >
								<Input:SfTimeSelector BorderThickness="{TemplateBinding BorderThickness}"
										BorderBrush="#000000"
										Height="{Binding DropDownHeight, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										x:Name="PART_TimeSelector" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										SelectedTime="{Binding Value, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Style="{Binding SelectorStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="SliderThumbStyle" TargetType="Thumb">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource SliderThumbBorderThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource SliderThumbBackgroundThemeBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style  TargetType="Input:SfRangeSlider">
		<Setter Property="Background" Value="{StaticResource SliderTrackBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource SliderBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource SliderBorderThemeThickness}"/>
		<Setter Property="Foreground" Value="{StaticResource SliderTrackDecreaseBackgroundThemeBrush}"/>
		<Setter Property="ManipulationMode" Value="None"/>
		<Setter Property="Maximum" Value="100"/>
		<Setter Property="SmallChange" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfRangeSlider">
					<Grid Margin="{TemplateBinding Padding}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPressedBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="HorizontalBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="VerticalBorder">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreaseDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="TopTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalInlineTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="BottomTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="LeftTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalInlineTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkInlineDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RightTickBar">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTickMarkOutsideDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="HorizontalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalDecreaseRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackDecreasePointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="VerticalTrackRect">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderTrackPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="HorizontalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeEndThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="VerticalRangeStartThumb">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SliderThumbPointerOverBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhiteHorizontal"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlackHorizontal"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhiteVertical"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlackVertical"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalTemplate" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="17"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="32"/>
							</Grid.RowDefinitions>
							<Rectangle x:Name="HorizontalTrackRect" Grid.ColumnSpan="3" Fill="{TemplateBinding Background}" Grid.Row="1"/>
							<Rectangle x:Name="HorizontalDecreaseRect" Width="{TemplateBinding ActualWidth}" Fill="{TemplateBinding Foreground}" Grid.Row="1" Grid.ColumnSpan="3"/>
							<Input:TickBar x:Name="TopTickBar" IsEnabled="False" IsHitTestVisible="False" Grid.ColumnSpan="3" Height="{StaticResource SliderOutsideTickBarThemeHeight}" Margin="0,0,0,2" Visibility="Collapsed" VerticalAlignment="Bottom" Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"/>
							<Input:TickBar x:Name="HorizontalInlineTickBar" IsEnabled="False" IsHitTestVisible="False" Grid.ColumnSpan="3" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Visibility="Collapsed" Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"/>
							<Input:TickBar x:Name="BottomTickBar" IsEnabled="False" IsHitTestVisible="False" Grid.ColumnSpan="3" Height="{StaticResource SliderOutsideTickBarThemeHeight}" Margin="0,2,0,0" Grid.Row="2" Visibility="Collapsed" VerticalAlignment="Top" Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"/>
							<Rectangle x:Name="HorizontalBorder" Grid.ColumnSpan="3" Grid.Row="1" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
							<Thumb x:Name="HorizontalRangeStartThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}" Visibility="Collapsed"/>
							<Thumb x:Name="HorizontalRangeEndThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}"/>
							<Rectangle x:Name="FocusVisualWhiteHorizontal" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
							<Rectangle x:Name="FocusVisualBlackHorizontal" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
						</Grid>
						<Grid x:Name="VerticalTemplate" Background="Transparent" Visibility="Collapsed">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="17"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="17"/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Rectangle x:Name="VerticalTrackRect" Grid.Column="1" Fill="{TemplateBinding Background}" Grid.RowSpan="3"/>
							<Rectangle x:Name="VerticalDecreaseRect" Grid.Column="1" Fill="{TemplateBinding Foreground}" Grid.RowSpan="3"/>
							<Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="LeftTickBar" HorizontalAlignment="Right" Margin="0,0,2,0" Grid.RowSpan="3" Visibility="Collapsed" Width="{StaticResource SliderOutsideTickBarThemeHeight}" Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"/>
							<Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="VerticalInlineTickBar" Grid.Column="1" Grid.RowSpan="3" Visibility="Collapsed" Width="{StaticResource SliderTrackThemeHeight}" Fill="{StaticResource SliderTickMarkInlineBackgroundThemeBrush}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"/>
							<Input:TickBar IsEnabled="False" IsHitTestVisible="False" x:Name="RightTickBar" Grid.Column="2" HorizontalAlignment="Left" Margin="2,0,0,0" Grid.RowSpan="3" Visibility="Collapsed" Width="{StaticResource SliderOutsideTickBarThemeHeight}" Fill="{StaticResource SliderTickmarkOutsideBackgroundThemeBrush}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}" Orientation="{TemplateBinding Orientation}" TickFrequency="{TemplateBinding TickFrequency}"/>
							<Rectangle x:Name="VerticalBorder" Grid.Column="1" Grid.RowSpan="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
							<Thumb x:Name="VerticalRangeStartThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}" Visibility="Collapsed"/>
							<Thumb x:Name="VerticalRangeEndThumb" Background="{StaticResource SliderThumbBackgroundThemeBrush}" Grid.Column="1" DataContext="{TemplateBinding Value}" Height="{StaticResource SliderTrackThemeHeight}" Grid.Row="1" Style="{StaticResource SliderThumbStyle}" Width="{StaticResource SliderTrackThemeHeight}"/>
							<Rectangle x:Name="FocusVisualWhiteVertical" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
							<Rectangle x:Name="FocusVisualBlackVertical" Grid.ColumnSpan="3" IsHitTestVisible="False" Opacity="0" Grid.RowSpan="3" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<Style TargetType="Input:TickBar">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:TickBar">
					<Grid x:Name="PART_Layout" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TextBoxExtStyle" TargetType="Input:SfTextBoxExt">
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfTextBoxExt">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBackgroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledBorderThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBackgroundThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
										<DoubleAnimation Duration="0" To="{StaticResource TextControlPointerOverBorderThemeOpacity}" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ButtonStates">
								<VisualState x:Name="ButtonVisible">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DeleteButton">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="ButtonCollapsed"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="PopupStates">
								<VisualState x:Name="TopLight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2 2 2 0"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="BottomLight">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2 0 2 2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="TopDark">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="BottomDark">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="PART_SuggestionBox">
											<DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid >
							<Popup IsOpen="{TemplateBinding IsSuggestionOpen}"  x:Name="PART_Popup"
								   HorizontalOffset="{Binding SuggestionBoxPosition.X, RelativeSource={RelativeSource Mode=TemplatedParent}}"
								   VerticalOffset="{Binding SuggestionBoxPosition.Y, RelativeSource={RelativeSource Mode=TemplatedParent}}">
								<Grid Background="{StaticResource ToolTipBackgroundThemeBrush}">

									<Input:SuggestionBox x:Name="PART_SuggestionBox" ItemsSource="{TemplateBinding Suggestions}" ItemTemplate="{TemplateBinding AutoCompleteItemTemplate}"
															 Style="{Binding SuggestionBoxStyle, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														 ItemTemplateSelector="{TemplateBinding AutoCompleteItemTemplateSelector}" ItemsPanel="{TemplateBinding AutoCompleteItemsPanel}"
														  MaxHeight="{TemplateBinding MaxDropDownHeight}" ScrollViewer.VerticalScrollBarVisibility="Auto"
														 SelectedIndex="{Binding SuggestionIndex, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
														 BorderBrush="{TemplateBinding BorderBrush}"/>
								</Grid>
							</Popup>
						</Grid>
						<Grid>
							<Grid.Resources>
								<Style x:Name="DeleteButtonStyle" TargetType="Button">
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="Button">
												<Grid>
													<VisualStateManager.VisualStateGroups>
														<VisualStateGroup x:Name="CommonStates">
															<VisualState x:Name="Normal"/>
															<VisualState x:Name="PointerOver">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBackgroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverBorderThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPointerOverForegroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Pressed">
																<Storyboard>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="BackgroundElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBackgroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="BorderElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedBorderThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																	<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="GlyphElement">
																		<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TextBoxButtonPressedForegroundThemeBrush}"/>
																	</ObjectAnimationUsingKeyFrames>
																</Storyboard>
															</VisualState>
															<VisualState x:Name="Disabled">
																<Storyboard>
																	<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BackgroundElement"/>
																	<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="BorderElement"/>
																</Storyboard>
															</VisualState>
														</VisualStateGroup>
													</VisualStateManager.VisualStateGroups>
													<Border x:Name="BorderElement" BorderBrush="{StaticResource TextBoxButtonBorderThemeBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
													<Border x:Name="BackgroundElement" Background="{StaticResource TextBoxButtonBackgroundThemeBrush}" Margin="{TemplateBinding BorderThickness}">
														<TextBlock x:Name="GlyphElement" Foreground="{StaticResource TextBoxButtonForegroundThemeBrush}" FontFamily="{StaticResource SymbolThemeFontFamily}" HorizontalAlignment="Center" Text="&#xE0A4;" VerticalAlignment="Center"/>
													</Border>
												</Grid>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Grid.Resources>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<Border x:Name="BackgroundElement" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" Margin="{TemplateBinding BorderThickness}"/>
							<Border x:Name="BorderElement" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2"/>
							<ContentControl x:Name="PART_Watermark" Content="{TemplateBinding Watermark}" ContentTemplate="{TemplateBinding WatermarkTemplate}" ContentTemplateSelector="{TemplateBinding WatermarkTemplateSelector}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
							<ScrollViewer x:Name="ContentElement" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" IsTabStop="False" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" ZoomMode="Disabled"/>
							<Button x:Name="DeleteButton" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" FontSize="{TemplateBinding FontSize}" IsTabStop="False" Style="{StaticResource DeleteButtonStyle}" Visibility="Collapsed" VerticalAlignment="Stretch"/>

						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfTextBoxExt" BasedOn="{StaticResource TextBoxExtStyle}"/>

	<Style TargetType="Input:SfNumericTextBox"  BasedOn="{StaticResource TextBoxExtStyle}">
		<Setter Property="InputScope" Value="Number"/>
	</Style>


	<Style TargetType="Input:SfDomainUpDown" x:Key="DomainUpDownStyle">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
        <Setter Property="BorderBrush" Value="#FFA0A5AB"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfDomainUpDown">
					<Grid>
						<local:SfUpDown x:Name="PART_UpDown" Grid.Column="1" IsTabStop="False"
									   Style="{Binding UpDownStyle, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									   AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"
									  DownCommand="{Binding DecrementCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
									  SpinButtonsAlignment="{Binding SpinButtonsAlignment, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
									  UpCommand="{Binding IncrementCommand, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<local:SfUpDown.UpDownContent>
								<Grid x:Name="InnerGrid" Background="{TemplateBinding Background}">
									<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
										<local:TransitionContentControl x:Name="PART_Content" 
																		ContentTemplate="{TemplateBinding ContentTemplate}" 
																		ContentTransitions="{TemplateBinding ContentTransition}" 
																		Content="{TemplateBinding Value}" 
																		EnableAnimation="{TemplateBinding EnableSpinAnimation}" 
																		HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
																		Margin="{StaticResource SyncfusionTransitionContentCotnrolThemePadding}" 
																		VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
											<local:TransitionContentControl.Transition>
												<local:SlideTransition Direction="Up"/>
											</local:TransitionContentControl.Transition>
										</local:TransitionContentControl>
									</Border>
								</Grid>
							</local:SfUpDown.UpDownContent>
						</local:SfUpDown>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfDomainUpDown" BasedOn="{StaticResource DomainUpDownStyle}"/>



	<Style x:Key="UpButtonStyle" TargetType="RepeatButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.9" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Border"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="path">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
										</ObjectAnimationUsingKeyFrames>
										<ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentPresenter">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonDisabledForegroundThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualWhite"/>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualBlack"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="PointerFocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="Border" Background="{TemplateBinding Background}"
								BorderThickness="1" 
								BorderBrush="{TemplateBinding Background}">
							<ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
											  ContentTransitions="{TemplateBinding ContentTransitions}"
											  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
											  Margin="{TemplateBinding Padding}"
											  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
								<Path x:Name="path" Data="M19.833,0L32.501,0 32.501,19.833999 52.334,19.833999 52.334,32.500999 32.501,32.500999 32.501,52.333 19.833,52.333 19.833,32.500999 0,32.500999 0,19.833999 19.833,19.833999z" Stretch="Uniform" Fill="#FFFFFFFF" Width="10" Height="10" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5"/>
							</ContentPresenter>
						</Border>
						<Rectangle x:Name="FocusVisualWhite" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="1.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}" StrokeDashArray="1,1"/>
						<Rectangle x:Name="FocusVisualBlack" IsHitTestVisible="False" Opacity="0" StrokeDashOffset="0.5" StrokeEndLineCap="Square" Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}" StrokeDashArray="1,1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="NumericRepeatButtonStyle" TargetType="local:SfUpDown">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="local:SfUpDown">
					<Grid x:Name="PART_OuterGrid">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<ContentControl x:Name="PART_Content" Content="{TemplateBinding UpDownContent}" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}"
										HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"/>
						<RepeatButton x:Name="PART_DownButton" Background="{TemplateBinding AccentBrush}"
									  VerticalAlignment="Stretch" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}" Grid.Column="1" IsTabStop="False" 
									  Style="{StaticResource DownButtonStyle}" Command="{TemplateBinding DownCommand}"/>
						<RepeatButton x:Name="PART_UpButton" Background="{TemplateBinding AccentBrush}" 
									  VerticalAlignment="Stretch" Margin="{StaticResource SyncfusionUpDownBorderThemeThickness}" Grid.Column="2" IsTabStop="False"
									  Style="{StaticResource UpButtonStyle}" Command="{TemplateBinding UpCommand}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfNumericUpDown" x:Key="NumericUpDownStyle">
		<Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
		<Setter Property="MinWidth" Value="{StaticResource TextControlThemeMinWidth}"/>
		<Setter Property="MinHeight" Value="{StaticResource TextControlThemeMinHeight}"/>
		<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundThemeBrush}"/>
		<Setter Property="Background" Value="{StaticResource TextBoxBackgroundThemeBrush}"/>
		<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderThemeBrush}"/>
		<Setter Property="BorderThickness" Value="{StaticResource TextControlBorderThemeThickness}"/>
		<Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
		<Setter Property="FontSize" Value="{StaticResource ControlContentThemeFontSize}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
		<Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
		<Setter Property="Padding" Value="{StaticResource TextControlThemePadding}"/>
		<Setter Property="UpDownStyle" Value="{StaticResource NumericRepeatButtonStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfNumericUpDown">
					<Grid x:Name="PART_OuterGrid">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ErrorStates">
								<VisualState x:Name="HasError">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="PART_Content">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SyncfusionTextBoxExtErrorThemeBrush}"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="NoError"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<local:SfUpDown x:Name="PART_UpDown"  IsTabStop="False"    
									   Style="{Binding UpDownStyle, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
										   VerticalContentAlignment="Center" AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}" DownCommand="{Binding SpinDownCommand, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" SpinButtonsAlignment="{Binding SpinButtonsAlignment, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" UpCommand="{Binding SpinUpCommand, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}">
							<local:SfUpDown.UpDownContent>
								<Grid>
                                    <Input:SfNumericTextBox x:Name="PART_Content" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" AllowNull="{Binding AllowNull, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
														    Culture="{Binding Culture, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            FormatString="{Binding FormatString, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            MaximumNumberDecimalDigits="{Binding MaximumNumberDecimalDigits, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            ParsingMode="{Binding ParsingMode, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            TextAlignment="{Binding TextAlignment, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"                                                             
                                                            Value="{Binding Value, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                            WatermarkTemplate="{Binding WatermarkTemplate, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            WatermarkTemplateSelector="{Binding WatermarkTemplateSelector, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                                            Watermark="{Binding Watermark, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                                </Grid>
							</local:SfUpDown.UpDownContent>
						</local:SfUpDown>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:SfNumericUpDown" BasedOn="{StaticResource NumericUpDownStyle}"/>

	<Style TargetType="local:TransitionContentControl" x:Key="Editors_HeaderStyle">
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="2"/>
		<Setter Property="FontSize" Value="14"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Transition">
			<Setter.Value>
				<local:FadeTransition />
			</Setter.Value>
		</Setter>
	</Style>



	<DataTemplate x:Key="DefaultCellTemplate">
		<Grid>
			<TextBlock Text="{Binding Day}" 
					   VerticalAlignment="Bottom"
					   Margin="3"/>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="DefaultHeaderTemplate">
		<Grid>
			<TextBlock Text="{Binding Converter={StaticResource HeaderFormatter}}"
					   FontSize="22" Margin="0 5"/>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="DefaultBlackOutTemplate">
		<Grid>
			<TextBlock Text="&#xE106;" Foreground="#FFA5A5A5"
					   VerticalAlignment="Top" FontFamily="Segoe UI Symbol"
					   Margin="3" HorizontalAlignment="Right"/>
            <TextBlock Text="{Binding Day}" Foreground="#FFA5A5A5"
					   VerticalAlignment="Bottom"
					   Margin="3"/>
		</Grid>
	</DataTemplate>

	<Style TargetType="Input:CalendarDayButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:CalendarDayButton">
					<Grid Background="Transparent">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ActiveStates">
								<VisualState x:Name="Active">
									<Storyboard>
										<DoubleAnimation To="1" Duration="0"
														 Storyboard.TargetName="PART_Content"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InActive">
									<Storyboard>
										<DoubleAnimation To="0.6" Duration="0"
														 Storyboard.TargetName="PART_Content"
														 Storyboard.TargetProperty="(UIElement.Opacity)"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Pressed">

								</VisualState>
								<VisualState x:Name="Disabled">
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_PointerOver" d:IsOptimized="True" To="1"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerFocused">
									<Storyboard>
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Focus" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CalendarStates">
								<VisualState x:Name="Today">
									<Storyboard >
										<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Today" d:IsOptimized="True"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Foreground)" Storyboard.TargetName="PART_Content">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<SolidColorBrush Color="White"/>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Other"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To="0.5" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PART_Selected" d:IsOptimized="True"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unselected"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="PART_PointerOver"  Fill="{StaticResource ButtonPointerOverBackgroundThemeBrush}" Opacity="0"/>
						<Rectangle x:Name="PART_PointerPressed" Fill="{StaticResource ButtonPressedBackgroundThemeBrush}" Opacity="0"/>
						<Rectangle x:Name="PART_Today" Fill="{StaticResource AccentBrush}" Opacity="0"/>
						<Rectangle x:Name="PART_Focus" Stroke="{StaticResource ApplicationForegroundThemeBrush}" Margin="1" Opacity="0" StrokeDashArray="2 2"/>
						<Rectangle x:Name="PART_Selected" Fill="{StaticResource AccentBrush}" Opacity="0"/>
						<local:TransitionContentControl 
							x:Name="PART_Content" IsTabStop="False"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}">
							<local:TransitionContentControl.Transition>
								<local:SlideTransition Duration="0:0:1"/>
							</local:TransitionContentControl.Transition>
						</local:TransitionContentControl>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource ButtonForegroundThemeBrush}"/>
	</Style>

	<Style TargetType="Input:SfCalendar">
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="ManipulationMode" Value="TranslateY"/>
		<Setter Property="CellTemplate" Value="{StaticResource DefaultCellTemplate}"/>
		<Setter Property="BlackOutCellTemplate" Value="{StaticResource DefaultBlackOutTemplate}"/>
		<Setter Property="HeaderTemplate" Value="{StaticResource DefaultHeaderTemplate}"/>
		<Setter Property="Width" Value="380"/>
		<Setter Property="Height" Value="260"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:SfCalendar">
					<Grid Background="{TemplateBinding Background}">

						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto"/>
							<RowDefinition />
						</Grid.RowDefinitions>

						<Grid >
							<Input:CalendarDayButton IsHitTestVisible="False" IsTabStop="False"
								Content="{Binding DisplayDate, RelativeSource={RelativeSource Mode=TemplatedParent}}"
								ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource Mode=TemplatedParent}}" Foreground="{StaticResource AccentBrush}"/>
						</Grid>

						<Grid x:Name="PART_WeekDays" Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
						</Grid>

						<Input:CalendarView x:Name="PART_CalendarView" Grid.Row="2" IsTabStop="False"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Input:CalendarView">
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="BorderBrush" Value="{StaticResource ApplicationForegroundThemeBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Input:CalendarView">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid x:Name="PART_LayoutRoot">

							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
								<RowDefinition Height="Auto"/>
								<RowDefinition />
							</Grid.RowDefinitions>

							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="1" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="3" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="5" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="7" Grid.ColumnSpan="13"/>
							<Rectangle Height="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Row="9" Grid.ColumnSpan="13"/>

							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="1" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="3" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="5" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="7" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="9" Grid.RowSpan="11"/>
							<Rectangle Width="1" Fill="{StaticResource ApplicationForegroundThemeBrush}" StrokeThickness="0" Grid.Column="11" Grid.RowSpan="11"/>

						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>

