<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Syncfusion.UI.Xaml.Controls.Layout">

    <SolidColorBrush x:Key="AccentBrush">Blue</SolidColorBrush>

    <SolidColorBrush x:Key="NormalBackground">#FFE6E6E6</SolidColorBrush>
    
    <SolidColorBrush x:Key="CollapsedStroke">#FF545454</SolidColorBrush>

    <SolidColorBrush x:Key="ExpandedStroke">White</SolidColorBrush>
    
    
    <Style TargetType="local:LayoutTransformer" x:Key="layoutStyle">
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:LayoutTransformer">
                    <Grid x:Name="TransformRoot" Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="Presenter"
                             FontFamily="{TemplateBinding FontFamily}" 
                                        FontSize="{TemplateBinding FontSize}" 
                                        FontStretch="{TemplateBinding FontStretch}" 
                                        FontStyle="{TemplateBinding FontStyle}" 
                                        FontWeight="{TemplateBinding FontWeight}"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
    TargetType="local:ExpandableContentControl" x:Key="expanderContentControlStyle">
        <Setter
      Property="IsEnabled"
      Value="true" />

        <Setter
      Property="IsTabStop"
      Value="False" />
        <Setter
      Property="TabNavigation"
      Value="Once" />
        <Setter
      Property="BorderThickness"
      Value="0" />
        <Setter
      Property="Padding"
      Value="0" />
        <Setter
      Property="HorizontalContentAlignment"
      Value="Left" />
        <Setter
      Property="VerticalContentAlignment"
      Value="Top" />
        <Setter
      Property="Template">
            <Setter.Value>
                <ControlTemplate
          TargetType="local:ExpandableContentControl">
                    <ContentPresenter
            x:Name="ContentSite"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            Margin="0" Content="{TemplateBinding Content}"
            ContentTemplate="{TemplateBinding ContentTemplate}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:AccordionButton" x:Key="accordionButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontFamily" Value="Segoe UI Symbol"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:AccordionButton">
                    <Grid Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="0"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedStroke}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CollapsedStroke}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.3" Storyboard.TargetName="icon" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" To="90"/>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ExpandedBackground" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="arrow">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpandedStroke}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="header">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ExpandedStroke}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked"/>
                                <VisualState x:Name="Unchecked"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBackground"/>
                                        <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="NormalBackground"/>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#FFEDEDED"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>

                                    </Storyboard>

                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard/>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.385"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="background" Background="{TemplateBinding Background}"
                                >
                            <Grid>
                                <Border x:Name="NormalBackground"
                                        VerticalAlignment="Stretch"  
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"/>

                                <Grid  x:Name="ExpandedBackground" Opacity="0">
                                    <Border 
                                        VerticalAlignment="Stretch" Background="{TemplateBinding AccentBrush}" 
                                        BorderBrush="{TemplateBinding BorderBrush}" 
                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>

                                <Grid x:Name="MouseOverBackground"  Opacity="0" >
                                    <Border 
                                        VerticalAlignment="Stretch" Background="#FFEDEDED" 
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"/>
                                </Grid>

                                <Grid Background="Transparent" Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" x:Name="cd0"/>
                                        <ColumnDefinition Width="Auto" x:Name="cd1"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" x:Name="rd0"/>
                                        <RowDefinition Height="Auto" x:Name="rd1"/>
                                    </Grid.RowDefinitions>
                                    <Grid Height="19" Margin="5,0,5,0" Background="{TemplateBinding Background}" HorizontalAlignment="Center" x:Name="icon" VerticalAlignment="Center" Width="19" RenderTransformOrigin="0.5,0.5" Grid.Column="1" Grid.Row="0">
                                        <Grid.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="-90"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Grid.RenderTransform>
                                        <Path Data="F1M568.254,-7.43524L568.159,-7.34277 567.977,-7.52246 546.559,-28.9417 525.484,-28.9417 549.787,-4.63446 557.439,3.01532 557.619,3.19629 550.067,10.7549 525.758,35.0583 546.834,35.0583 568.254,13.6429 578.792,3.10254 568.254,-7.43524z" 
                                          Stretch="Uniform" Fill="{StaticResource ExpandedStroke}" 
                                          Width="12" Height="12" x:Name="arrow" RenderTransformOrigin="0.5,0.5" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                    <local:LayoutTransformer
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        Style="{StaticResource layoutStyle}"
                                        x:Name="header" 
                                        Grid.Column="0"
                                        Grid.Row="0" 
                                        Grid.RowSpan="1" 
                                        Content="{TemplateBinding Content}" 
                                        ContentTemplate="{TemplateBinding ContentTemplate}"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed"
                                   RadiusX="1" RadiusY="1" Stroke="#FF6DBDD1" StrokeThickness="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="local:SfAccordion">
        <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="AccentBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="TabNavigation" Value="Once" />
        <!-- Accordion expects a stackpanel to layout its children. -->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SfAccordion">
                    <Grid x:Name="Root" >
                        <VisualStateManager.VisualStateGroups>
                            <!-- common states -->
                            <VisualStateGroup
                x:Name="CommonStates">
                                <VisualState
                  x:Name="Normal" />
                                <VisualState
                  x:Name="Pressed" />
                                <VisualState
                  x:Name="MouseOver" />
                                <VisualState
                  x:Name="Disabled" />
                            </VisualStateGroup>
                            <!-- focus states -->
                            <VisualStateGroup
                x:Name="FocusStates">
                                <VisualState
                  x:Name="Focused" />
                                <VisualState
                  x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border
              x:Name="Border"
              BorderThickness="{TemplateBinding BorderThickness}"
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}">
                            <ScrollViewer 
                IsTabStop="False"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto"
                Background="{x:Null}"
                BorderBrush="Transparent"
                Margin="0"
                Padding="0"
                BorderThickness="0">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="local:SfAccordionItem">
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="#FFC5C5C5"/>
        <Setter Property="BorderThickness" Value="1 1 1 0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ExpandableContentControlStyle" Value="{StaticResource expanderContentControlStyle}"/>
        <Setter Property="AccordionButtonStyle" Value="{StaticResource accordionButtonStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="local:SfAccordionItem">
               
                    <Border x:Name="Background" 
                  Background="{TemplateBinding Background}"
			      BorderBrush="{TemplateBinding BorderBrush}" 
			      BorderThickness="{TemplateBinding BorderThickness}" >
                        <VisualStateManager.VisualStateGroups>
                            <!-- CommonState -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <!-- FocusStates -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                            <!-- ExpansionStates -->
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                      BeginTime="00:00:00" Duration="00:00:01" EnableDependentAnimation="True"                     
                      Storyboard.TargetName="ExpandSite"
                      Storyboard.TargetProperty="(ExpandableContentControl.Percentage)">
                                            <SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:0.3" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                      BeginTime="00:00:00" Duration="00:00:01" EnableDependentAnimation="True"                     
                      Storyboard.TargetName="ExpandSite"
                      Storyboard.TargetProperty="(ExpandableContentControl.Percentage)">
                                            <SplineDoubleKeyFrame KeySpline="0.2,0,0,1" KeyTime="00:00:0.3" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!-- ExpansionStates -->
                            <VisualStateGroup x:Name="LockedStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Locked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="False"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unlocked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="ExpanderButton" Storyboard.TargetProperty="IsEnabled">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="True"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid Margin="{TemplateBinding Padding}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              >
                            <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" x:Name="rd0"/>
                                    <RowDefinition Height="*" x:Name="rd1"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" x:Name="cd0"/>
                                    <ColumnDefinition Width="Auto" x:Name="cd1"/>
                                </Grid.ColumnDefinitions>

                                <local:AccordionButton
					          x:Name="ExpanderButton"
                                    AccentBrush="{TemplateBinding AccentBrush}"
                    Style="{TemplateBinding AccordionButtonStyle}"
					          Content="{TemplateBinding Header}"
					          ContentTemplate="{TemplateBinding HeaderTemplate}"
					          IsChecked="{TemplateBinding IsSelected}"
					          IsTabStop="True"
					          Grid.Row="0"
					          FontFamily="{TemplateBinding FontFamily}"
					          FontSize="{TemplateBinding FontSize}"
					          FontStretch="{TemplateBinding FontStretch}"
					          FontStyle="{TemplateBinding FontStyle}"
					          FontWeight="{TemplateBinding FontWeight}"
					          Foreground="{TemplateBinding Foreground}"
                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                    Background="{TemplateBinding Background}" />
                                <local:ExpandableContentControl
					          x:Name="ExpandSite"
					          Grid.Row="1"
					          IsTabStop="False"
					          Percentage="0"
					          Content="{TemplateBinding Content}"
					          ContentTemplate="{TemplateBinding ContentTemplate}"
					          Margin="0 0 0 0"
                              Style="{TemplateBinding ExpandableContentControlStyle}"
					          FontFamily="{TemplateBinding FontFamily}"
					          FontSize="{TemplateBinding FontSize}"
					          FontStretch="{TemplateBinding FontStretch}"
					          FontStyle="{TemplateBinding FontStyle}"
					          FontWeight="{TemplateBinding FontWeight}"
					          Foreground="{TemplateBinding Foreground}"
					          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
					          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
					          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
					          VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
                            </Grid>
                        </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

  
</ResourceDictionary>

